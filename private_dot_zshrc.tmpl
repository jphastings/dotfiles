# Path to your oh-my-zsh installation.
export ZSH=/Users/$USER/.oh-my-zsh

ZSH_THEME="refined"
COMPLETION_WAITING_DOTS="true"

plugins=(git rake)

# User configuration

source $ZSH/oh-my-zsh.sh

alias gconflict="git diff --name-only --diff-filter=U | xargs subl"

# Terminal use

export OP_BIOMETRIC_UNLOCK_ENABLED=true
export GPG_TTY=`tty`
export EDITOR="subl -w"

function csv {
  cat "$@" | sed 's/,/ ,/g' | column -t -s, | less -F -S -X -K
}

# Software Engineering

## Go
export GOPATH=/Users/jp/go
export PATH=/Users/jp/bin:$GOPATH/bin:$PATH

## Ruby
eval "$(rbenv init -)"

## Docker
export DOCKER_BUILDKIT=1

## IPFS
function adaipfs() {
  ipfs --api /dns4/ada.lan/tcp/5001 $@
}

## Homebrew
if [[ "$_ARCH" == "i386" ]]; then
  export PATH="/usr/local/bin:$PATH"
  export PATH="/usr/local/opt:$PATH"
fi

if [[ "$_ARCH" == "arm64" ]]; then
  export PATH="/opt/homebrew/bin:$PATH"
  export PATH="/opt/homebrew/opt:$PATH"
fi

alias ibrew="arch -x86_64 /usr/local/bin/brew"
alias abrew="arch -arm64 /opt/homebrew/bin/brew"

{{- if .is_deliveroo }}
# Deliveroo

## Github
export GITHUB_ORG_TOKEN=
export GITHUB_API_TOKEN=
export HOMEBREW_GITHUB_API_TOKEN=$GITHUB_API_TOKEN

## Go
export GOPRIVATE=github.com/deliveroo
export SRCPATH=/Users/jp/src/deliveroo/

## ssm-saiyan
export AWS_REGION=eu-west-1
export AWS_PROFILE=saml
unalias gsts
alias saiyan='gsts --idp-id C01jnk96c --sp-id 461132902683 --aws-profile saml --force'

# Opens project & ensures latest state
function /() {
  if [[ "$1" == "" || "$1" == "--help" ]]; then
    echo "Clones projects locally, then changes into that directory"
    echo "$0 <project-name>"
    return
  fi

  if ! command -v "roo-clone" &> /dev/null; then
      echo "roo-clone could not be found."
      echo "  brew install deliveroo/tools/roo-clone"
      return
  fi

  output=$(roo clone "$@")
  ret=$?
  echo $output
  [[ $ret != "0" ]] && return
  cd ${output##* }
  echo "Updating from remoteâ€¦"

  git fetch origin main master > /dev/null 2>&1
  [[ -z "$(git status --porcelain)" ]] || return
}

## Hopper
export HOPPER_API_TOKEN=
function hopper() {
  curl -s --request GET \
      --url https://hopper.deliveroo.net/api/$1 \
      --header 'accept: application/json' \
      --header "authorization: Bearer ${HOPPER_API_TOKEN}"
}

## Java
eval export PATH="/Users/jp/.jenv/shims:${PATH}"
export JENV_SHELL=zsh
export JENV_LOADED=1
unset JAVA_HOME

jenv rehash 2>/dev/null
jenv refresh-plugins
jenv() {
  typeset command
  command="$1"
  if [ "$#" -gt 0 ]; then
    shift
  fi

  case "$command" in
  enable-plugin|rehash|shell|shell-options)
    eval `jenv "sh-$command" "$@"`;;
  *)
    command jenv "$command" "$@";;
  esac
}

## Javascript
export NVM_DIR="$HOME/.nvm"
  [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

  ## Postgres
export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.6/bin
export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
export PATH=$PATH:node_modules/.bin

export LDFLAGS="-L/opt/homebrew/opt/libpq/lib"
export CPPFLAGS="-I/opt/homebrew/opt/libpq/include"

export WORKDIR="/Users/jp/src/deliveroo"

## Supported
export SUPPORTED_TOKEN=
{{- end }}
